version: 2

# Enhanced configuration for Phase 1: Data Collection
defaults:
  lookback_days: 30
  global_limits:
    max_repos: 300 # hard cap across all ICPs
    max_leads: 200 # hard cap across all ICPs
    per_repo_events: 25
  dedupe_db: "lead_intelligence/data/dedup.sqlite3"
  out_dir: "lead_intelligence/data/raw"
  log_dir: "lead_intelligence/logs"
  github:
    per_page: 100
    timeout_secs: 15
    retries: 3
    backoff_base_secs: 2.0
    jitter: true

# ICP definitions with enhanced search and signal detection
icps:
  icp01_pypi_maintainers:
    label: "PyPI Maintainers – Fast-moving Python"
    enabled: true
    search:
      type: repositories
      segments:
        - "language:Python stars:50..2000 archived:false pushed:>={date:60} in:readme pytest -is:fork"
      sort: updated
      window_days: 60
    signals:
      lookback_days: 30
      include: [pr, commit, release, issue]
    limits:
      max_repos: 120
      per_repo_events: 30

  icp02_ml_ds_maintainers:
    label: "ML/DS Ecosystem Maintainers"
    enabled: true
    search:
      type: repositories
      segments:
        - "language:Python (pytorch OR tensorflow OR sklearn) stars:>100 pushed:>={date:90} -archived:true -is:fork"
    signals:
      lookback_days: 45
    limits:
      max_repos: 150
      per_repo_events: 20

  icp03_seed_series_a_python_saas:
    label: "Seed/Series A Python SaaS (Actions-first)"
    enabled: true
    search:
      type: repositories
      segments:
        - "language:Python stars:10..500 pushed:>={date:30} -is:fork filename:.github/workflows"
    signals:
      lookback_days: 14
    limits:
      max_repos: 80
      per_repo_events: 15

  icp04_api_sdk_tooling:
    label: "API/SDK DevTools Teams"
    enabled: true
    search:
      type: repositories
      segments:
        - "language:Python stars:25..1000 pushed:>={date:45} (sdk OR api OR client OR library) -is:fork"
    signals:
      lookback_days: 21
    limits:
      max_repos: 100
      per_repo_events: 25

  icp05_academic_labs:
    label: "University/Research Labs Maintaining Python Packages"
    enabled: true
    search:
      type: repositories
      segments:
        - "language:Python stars:5..800 pushed:>={date:60} (university OR research OR lab OR academic) -is:fork"
    signals:
      lookback_days: 60
    limits:
      max_repos: 90
      per_repo_events: 20

  icp06_django_flask_products:
    label: "Django/Flask Product Teams (E-com/B2C)"
    enabled: true
    search:
      type: repositories
      segments:
        - "language:Python stars:20..1500 pushed:>={date:30} (django OR flask) -is:fork"
    signals:
      lookback_days: 14
    limits:
      max_repos: 110
      per_repo_events: 18

  icp07_regulated_startups:
    label: "Fintech/Healthtech (Regulated) – Python Backends"
    enabled: true
    search:
      type: repositories
      segments:
        - "language:Python stars:5..300 pushed:>={date:45} (fintech OR healthtech OR finance OR healthcare) -is:fork"
    signals:
      lookback_days: 30
    limits:
      max_repos: 70
      per_repo_events: 22

  icp08_agencies_consultancies:
    label: "Agencies/Consultancies with Many Client Repos"
    enabled: true
    search:
      type: repositories
      segments:
        - "language:Python stars:1..100 pushed:>={date:14} (agency OR consultancy OR consulting) -is:fork"
    signals:
      lookback_days: 7
    limits:
      max_repos: 60
      per_repo_events: 12

  icp09_pytest_ci_plugin_authors:
    label: "PyTest/CI Plugin Authors & Tooling Maintainers"
    enabled: true
    search:
      type: repositories
      segments:
        - "language:Python stars:10..800 pushed:>={date:30} (pytest OR tox OR ci OR plugin) -is:fork"
    signals:
      lookback_days: 21
    limits:
      max_repos: 85
      per_repo_events: 28

  icp10_explicit_flaky_signals:
    label: "Repos with Explicit Flaky/Failing Test Signals"
    enabled: true
    search:
      type: repositories
      segments:
        - "language:Python stars:5..600 pushed:>={date:21} (flaky OR nondeterministic OR race) -is:fork"
    signals:
      lookback_days: 14
    limits:
      max_repos: 75
      per_repo_events: 35

# Legacy compatibility - will be removed in v3
github:
  # Token is now loaded from environment variable GITHUB_TOKEN
  # Set with: export GITHUB_TOKEN=your_token_here
  # Or add to .env file
  token: ${GITHUB_TOKEN}
  endpoint: https://api.github.com
  respect_rate_limits: true
  concurrency: 2
  retry:
    max_attempts: 3
    backoff_seconds: 2.0

search:
  type: repositories
  query: "language:python stars:100..500 is:public archived:false"
  sort: updated
  order: desc
  per_page: 50

filters:
  activity_days: 60
  include_forks: false
  exclude_archived: true
  exclude_mirrors: true
  require_ci: false
  require_tests_signal: false
  licenses:
    include: [mit, apache-2.0, bsd-3-clause, bsd-2-clause, mpl-2.0]
  min_open_issues: 0
  min_recent_commits: 1
  min_recent_prs: 0
  min_contributors_last_90d: 1
  exclude_orgs:
    [apache, google, microsoft, facebook, pytorch, tensorflow, aws, oracle]
  exclude_repo_name_keywords:
    [
      docs,
      documentation,
      examples,
      tutorial,
      sample,
      book,
      course,
      template,
      starter,
      playground,
      dotfiles,
      sandbox,
    ]

limits:
  max_repos: 40
  per_repo_prs: 20
  per_repo_commits: 20
  per_repo_workflow_runs: 30
  per_repo_issues: 40
  max_people: 200
  max_contacts_per_repo: 6

# Be nice to GitHub
delay: 1.0

enrichment:
  # Pull extra signals that correlate with “tests are painful” and “we can reach someone”
  pull:
    repo_topics: true
    default_branch: true
    languages: true
    releases: true
    issues_recent_only: true
    prs_recent_only: true
    check_suites: true # CI status (requires checks permission)
    workflow_runs: true # GitHub Actions runs
    codeowners: true
    files_presence: true
    pypi_metadata: true # author/maintainer emails, project URLs
  recent_window_days: 90
  files_presence_rules:
    any_of: # any of these counts as a test signal
      - "pytest.ini"
      - "tox.ini"
      - "noxfile.py"
      - "tests/**"
      - ".github/workflows/*pytest*.yml"
      - ".github/workflows/*test*.yml"
      - "pyproject.toml"
      - "setup.cfg"
    pyproject_checks:
      require_tools_any_of: ["pytest", "tox", "nox", "hypothesis", "pytest-cov"]
  ci_workflow_name_patterns:
    ["test", "tests", "pytest", "ci", "build", "python-package"]
  python_version_matrix_patterns: ["3.10", "3.11", "3.12", "3.13"] # signals for breadth of matrix

scoring:
  # Weighted signals → single repo_score (higher = better NovaSolve prospect)
  weights:
    stars_midrange: 2.0 # 100–1000 gets a boost
    recent_activity: 2.0 # commits/PRs in last 60–90d
    failing_ci_recent: 3.5 # failed runs in last 14d
    flaky_keywords: 2.5 # “flaky|flake|nondeterministic|race”
    test_fix_commits: 2.5 # commit/PR titles with "fix test(s)" / "deflake"
    pytest_presence: 1.5 # pytest in pyproject/setup.cfg/tox.ini
    matrix_breadth: 1.0 # ≥3 Python versions in CI matrix
    open_help_wanted: 0.5 # help-wanted/gfi counts
    maintainer_reachability: 1.5 # email discovered via repo/PyPI/CODEOWNERS
  thresholds:
    min_repo_score: 6.0
    min_contact_score: 1.0
  signals:
    failing_ci_recent:
      lookback_days: 14
      statuses: ["failure", "timed_out", "cancelled"]
    flaky_keywords:
      sources: ["issues", "pull_requests"]
      patterns:
        [
          "flaky",
          "flake",
          "non-deterministic",
          "nondeterministic",
          "intermittent",
          "race condition",
        ]
    test_fix_commits:
      sources: ["commits", "pull_requests"]
      patterns:
        [
          "fix test",
          "fix tests",
          "unflake",
          "deflake",
          "stabilize test",
          "ci: fix",
        ]
    pytest_presence:
      files:
        - path: "pyproject.toml"
          contains_any: ["[tool.pytest.ini_options]", "pytest"]
        - path: "setup.cfg"
          contains_any: ["[tool:pytest]", "[pytest]"]
        - path: "tox.ini"
          contains_any: ["[testenv]", "pytest"]
    matrix_breadth:
      from_workflows: true
      min_versions: 3
      version_patterns: ['"3.10"', '"3.11"', '"3.12"', '"3.13"']

people:
  roles_priority:
    [
      "CODEOWNER",
      "Maintainer",
      "Author",
      "Core",
      "RecentCommitter",
      "RecentPRAuthor",
    ]
  extract:
    codeowners: true
    maintainers_files:
      [
        "MAINTAINERS",
        "MAINTAINERS.md",
        "CONTRIBUTORS",
        "CONTRIBUTORS.md",
        "AUTHORS",
        "AUTHORS.md",
      ]
    git_blame_recent_days: 90
    prs_recent_days: 90
    commits_recent_days: 90
    pypi:
      enable: true
      fields: ["author_email", "maintainer_email", "home_page", "project_urls"]
  contact_enrichment:
    resolve_emails_from:
      - "git log"
      - "CODEOWNERS"
      - "PyPI metadata"
      - "CITATION.cff"
      - "setup.cfg / pyproject.toml"
      - "commit signatures"
    accept_domains: [".org", ".edu", ".io", ".dev", ".com"]
    dedupe_on: ["email", "github_login"]
    max_emails_per_person: 2

target_segments:
  - name: "PyPI Package Owners (mid-size)"
    description: "Active Python packages that ship regular releases"
    query: >
      language:python stars:100..1000 is:public archived:false
      (topic:pypi OR in:description pypi OR in:readme pypi)
      -topic:awesome -in:name awesome -in:description awesome
    extra_filters:
      require_releases_last_120d: true
      min_recent_prs: 4
    score_multiplier: 1.2
    why: "Constantly shipping releases; broken tests block wheels & users"

  - name: "CI/CD Tool Maintainers"
    description: "Pytest plugins, tox plugins, test runners, GH Actions for Python"
    query: >
      language:python stars:50..600 is:public archived:false
      (topic:pytest OR topic:testing OR topic:ci OR topic:tox OR in:name pytest- OR in:name tox- OR in:readme "GitHub Actions")
      -topic:awesome -in:name awesome -in:description awesome
    extra_filters:
      require_ci: true
      min_recent_prs: 3
    score_multiplier: 1.15
    why: "They live in CI/test infra; fast resonance & referrals"

  - name: "Academic/Research Lib Maintainers"
    description: "ML/data wrangling libraries with fragile dependencies"
    query: >
      language:python stars:80..1200 is:public archived:false
      (topic:machine-learning OR topic:data-science OR topic:scientific-computing OR topic:numpy OR topic:pandas OR topic:pytorch OR in:readme numpy OR in:readme pandas OR in:readme torch)
      -in:name awesome -in:description awesome
    extra_filters:
      min_open_issues: 10
      require_tests_signal: true
    score_multiplier: 1.1
    why: "Churn from NumPy/Pandas/Torch causes frequent test breakage"

concurrency:
  enabled: true
  max_workers: 1 # Set to 1 to avoid rate limiting issues
  requests_per_hour: 1000 # Further reduced for safety
  cache_dir: ".cache"

dedupe:
  on: ["repo_full_name", "owner_login"]
  keep: "highest_score"

export:
  format: csv
  path: "./out/prospects.csv"
  fields:
    - repo_full_name
    - repo_html_url
    - stars
    - forks
    - open_issues
    - last_push
    - default_branch
    - has_ci
    - last_failed_ci
    - python_versions_in_matrix
    - top_topics
    - repo_score
    - segment
    - contact_name
    - contact_role
    - contact_email
    - contact_source
    - contact_score
